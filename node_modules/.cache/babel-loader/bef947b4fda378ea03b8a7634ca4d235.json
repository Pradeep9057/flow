{"ast":null,"code":"import memoize from 'lodash.memoize';\nfunction resolver(options) {\n  return JSON.stringify(options);\n}\nfunction uniqDefined(arr) {\n  return arr.filter(function (el, index) {\n    return el && arr.indexOf(el) === index;\n  });\n}\nfunction normalizeLocales(arr) {\n  return arr.map(function (el) {\n    if (!el || el.indexOf('-') === -1 || el.toLowerCase() !== el) {\n      return el;\n    }\n    var splitEl = el.split('-');\n    return splitEl[0] + \"-\" + splitEl[1].toUpperCase();\n  });\n}\nfunction getUserLocalesInternal(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    _ref$useFallbackLocal = _ref.useFallbackLocale,\n    useFallbackLocale = _ref$useFallbackLocal === void 0 ? true : _ref$useFallbackLocal,\n    _ref$fallbackLocale = _ref.fallbackLocale,\n    fallbackLocale = _ref$fallbackLocale === void 0 ? 'en-US' : _ref$fallbackLocale;\n  var languageList = [];\n  if (typeof window !== 'undefined') {\n    var _window = window,\n      navigator = _window.navigator;\n    languageList = languageList.concat(navigator.languages, navigator.language, navigator.userLanguage, navigator.browserLanguage, navigator.systemLanguage);\n  }\n  if (useFallbackLocale) {\n    languageList.push(fallbackLocale);\n  }\n  return normalizeLocales(uniqDefined(languageList));\n}\nexport var getUserLocales = memoize(getUserLocalesInternal, resolver);\nfunction getUserLocaleInternal(options) {\n  return getUserLocales(options)[0] || null;\n}\nexport var getUserLocale = memoize(getUserLocaleInternal, resolver);\nexport default getUserLocale;","map":null,"metadata":{},"sourceType":"module"}