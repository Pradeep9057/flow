{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\pc\\\\Desktop\\\\New folder\\\\flow3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\New folder\\\\flow3\\\\src\\\\WalletCard.js\";\n// https://docs.metamask.io/guide/ethereum-provider.html#using-the-provider\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport \"./WalletCard.css\";\nimport { useNavigate, NavLink } from 'react-router-dom';\nvar WalletCard = function WalletCard(props) {\n  var navigate = useNavigate();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    errorMessage = _useState2[0],\n    setErrorMessage = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    defaultAccount = _useState4[0],\n    setDefaultAccount = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userBalance = _useState6[0],\n    setUserBalance = _useState6[1];\n  var _useState7 = useState('Connect Wallet'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    connButtonText = _useState8[0],\n    setConnButtonText = _useState8[1];\n  var connectWalletHandler = function connectWalletHandler() {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      console.log('MetaMask Here!');\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(function (result) {\n        accountChangedHandler(result[0]);\n        setConnButtonText('Wallet Connected');\n        getAccountBalance(result[0]);\n      }).catch(function (error) {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log('Need to install MetaMask');\n      setErrorMessage('Please install MetaMask browser extension to interact');\n    }\n    //  navigate(\"/\");\n  };\n\n  // update account, will cause component re-render\n  var accountChangedHandler = function accountChangedHandler(newAccount) {\n    setDefaultAccount(newAccount);\n    getAccountBalance(newAccount.toString());\n  };\n  var getAccountBalance = function getAccountBalance(account) {\n    window.ethereum.request({\n      method: 'eth_getBalance',\n      params: [account, 'latest']\n    }).then(function (balance) {\n      setUserBalance(ethers.utils.formatEther(balance));\n    }).catch(function (error) {\n      setErrorMessage(error.message);\n    });\n  };\n  var chainChangedHandler = function chainChangedHandler() {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  };\n\n  // listen for account changes\n  window.ethereum.on('accountsChanged', accountChangedHandler);\n  window.ethereum.on('chainChanged', chainChangedHandler);\n  if (defaultAccount) {\n    props.onSubmit(defaultAccount);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"walletCard iteams\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"items\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }\n  }, \" \", \"Connection to MetaMask using window.ethereum methods\", \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"items button\",\n    onClick: connectWalletHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, connButtonText), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"accountDisplay items\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Address: \", defaultAccount), console.log(defaultAccount)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"balanceDisplay items\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Balance: \", userBalance)), errorMessage);\n};\nexport default WalletCard;","map":{"version":3,"names":["React","useState","ethers","useNavigate","NavLink","WalletCard","props","navigate","_useState","_useState2","_slicedToArray","errorMessage","setErrorMessage","_useState3","_useState4","defaultAccount","setDefaultAccount","_useState5","_useState6","userBalance","setUserBalance","_useState7","_useState8","connButtonText","setConnButtonText","connectWalletHandler","window","ethereum","isMetaMask","console","log","request","method","then","result","accountChangedHandler","getAccountBalance","catch","error","message","newAccount","toString","account","params","balance","utils","formatEther","chainChangedHandler","location","reload","on","onSubmit","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["C:/Users/pc/Desktop/New folder/flow3/src/WalletCard.js"],"sourcesContent":["// https://docs.metamask.io/guide/ethereum-provider.html#using-the-provider\r\nimport React, {useState} from 'react'\r\nimport { ethers } from 'ethers'\r\nimport \"./WalletCard.css\"\r\nimport { useNavigate, NavLink } from 'react-router-dom';\r\n\r\nconst WalletCard = (props) => {\r\n    const navigate = useNavigate();\r\n\tconst [errorMessage, setErrorMessage] = useState(null);\r\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\r\n\tconst [userBalance, setUserBalance] = useState(null);\r\n    const [connButtonText, setConnButtonText] = useState('Connect Wallet');\r\n    \r\n\tconst connectWalletHandler = () => {\r\n\t\tif (window.ethereum && window.ethereum.isMetaMask) {\r\n\t\t\tconsole.log('MetaMask Here!');\r\n\r\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts'})\r\n\t\t\t.then(result => {\r\n\t\t\t\taccountChangedHandler(result[0]);\r\n\t\t\t\tsetConnButtonText('Wallet Connected');\r\n\t\t\t\tgetAccountBalance(result[0]);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetErrorMessage(error.message);\r\n\t\t\t\r\n\t\t\t});\r\n\r\n\t\t} else {\r\n\t\t\tconsole.log('Need to install MetaMask');\r\n\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact');\r\n        }\r\n        //  navigate(\"/\");\r\n        \r\n\t}\r\n\r\n\t// update account, will cause component re-render\r\n\tconst accountChangedHandler = (newAccount) => {\r\n\t\tsetDefaultAccount(newAccount);\r\n\t\tgetAccountBalance(newAccount.toString());\r\n\t}\r\n\r\n\tconst getAccountBalance = (account) => {\r\n\t\twindow.ethereum.request({method: 'eth_getBalance', params: [account, 'latest']})\r\n\t\t.then(balance => {\r\n\t\t\tsetUserBalance(ethers.utils.formatEther(balance));\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tsetErrorMessage(error.message);\r\n\t\t});\r\n\t};\r\n\r\n\tconst chainChangedHandler = () => {\r\n\t\t// reload the page to avoid any errors with chain change mid use of application\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\r\n\t// listen for account changes\r\n\twindow.ethereum.on('accountsChanged', accountChangedHandler);\r\n\r\n    window.ethereum.on('chainChanged', chainChangedHandler);\r\n    \r\n    if (defaultAccount) {\r\n        props.onSubmit(defaultAccount);\r\n    }\r\n\t\r\n\treturn (\r\n\t\t<div className='walletCard iteams'>\r\n\t\t<h4 className='items'> {\"Connection to MetaMask using window.ethereum methods\"} </h4>\r\n            <button className='items button' onClick={connectWalletHandler}>{connButtonText}</button>\r\n\r\n\t\t\t<div className='accountDisplay items'>\r\n                <h3>Address: {defaultAccount}</h3>\r\n                {console.log(defaultAccount)}\r\n\t\t\t</div>\r\n\t\t\t<div className='balanceDisplay items'>\r\n                <h3>Balance: {userBalance}</h3>\r\n                {/* {console.log(userBalance)} */}\r\n\r\n\t\t\t</div>\r\n\t\t\t{errorMessage}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default WalletCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}